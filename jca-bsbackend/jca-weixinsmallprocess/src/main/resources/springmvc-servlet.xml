<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		 http://www.springframework.org/schema/beans 
		 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		 http://www.springframework.org/schema/aop 
		 http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		 http://www.springframework.org/schema/context
		 http://www.springframework.org/schema/context/spring-context-3.2.xsd
		 http://www.springframework.org/schema/tx
		 http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		 http://www.springframework.org/schema/mvc
		 http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 使用 Swagger Restful API 文档时，添加此注解 -->
	<mvc:default-servlet-handler />
	<!-- 扫描controller包注解 -->
	<context:component-scan base-package="com.jca.weixinsmallprocess.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.context.annotation.Configuration" />
		<context:include-filter type="annotation"
			expression="org.springframework.scheduling.annotation.Scheduled" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 使用spring的web模块配置多视图解析器，同样的数据显示不同的试图 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!--favorParameter默认为true， 表示支持参数匹配，可以根据请求参数的值确定MIME类型，默认请求参数为format -->
		<property name="favorParameter" value="true" />
		<property name="defaultContentType" value="text/html" />
		<!-- 根据请求参数值和MIME类型的映射列表，即contentType以何种格式来展示 -->
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html;charset=UTF-8" />
				<entry key="json" value="application/json;charset=UTF-8" />
				<entry key="xml" value="application/xml;charset=UTF-8" />
				<entry key="jsonp" value="application/javascript" />
			</map>
		</property>
		<!-- 表示网页试图解析器 -->
		<property name="viewResolvers">
			<list>
				<!-- 使用spring的web模块，JSP技术，实现内部资源视图解析器 -->
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 配置注解驱动 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<!-- 解决响应中的中文乱码问题 -->
				<!-- 解决异步乱码 -->
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<!-- 通过FastJsonHttpMessageConverter的supportedMediaTypes属性，进行自动转换为JSON的配置 -->
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<!--通过FastJsonHttpMessageConverter的features属性， 进行日期转换配置 -->
				<property name="features">
					<list>
						<value>WriteDateUseDateFormat</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 使用spring的web模块配置MultipartResolver，用于上传文件，使用spring的CommonsMultipartResolver -->
	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<property name="maxUploadSize" value="5000000" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<!-- 注册拦截器 -->
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/sys/**"/> 
		<bean id="permissionInterceptor" class="com.jca.jurisdictionmanage.interceptor.PermissionInterceptor" 
		autowire="default"/> </mvc:interceptor> </mvc:interceptors> -->
</beans>